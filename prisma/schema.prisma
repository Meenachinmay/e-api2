// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

  relationMode = "prisma"
}

enum UserRole {
  ADMIN
  USER
  EVENT_ORGANIZER
}

// user model
model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  name        String
  password    String?
  role        UserRole     @default(USER)
  savedEvents SavedEvent[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}

// event model
model Event {
  id          Int          @id @unique @default(autoincrement())
  title       String
  description String
  date        String
  images      Json? // changed to Json
  tags        Json? // changed to Json
  activities  Json? // changed to Json
  omiyage     Json? // changed to Json
  snsLinks    Json? // changed to Json
  city        String
  prefecture  String
  createdAt   DateTime     @default(now())
  comments    Comment[] // Adding the relationship here
  savedBy     SavedEvent[]
}

// Junction table
model SavedEvent {
  userId Int
  user   User @relation(fields: [userId], references: [id])

  eventId Int
  event   Event @relation(fields: [eventId], references: [id])

  createdAt DateTime @default(now())

  @@id([userId, eventId])
  @@index([userId])
  @@index([eventId])
}

// comment model
model Comment {
  id      Int    @id @default(autoincrement())
  content String
  rating  Float
  eventId Int
  createdAt   DateTime     @default(now())
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@index([eventId])
}

model EventOrganizer {
  id    Int    @id @default(autoincrement())
  title String
}
