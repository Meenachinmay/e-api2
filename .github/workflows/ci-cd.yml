name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    env: # Adding environment variables
      NESTJS_PORT: ${{ secrets.NESTJS_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      # ...add more here

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Creating env file 
    - name: "Create env file"
      run: |
        echo "${{secrets.ENV_FILE }}" >> .env

    # Login to Docker Hub
    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build Docker Image
    - name: Build Docker Image
      run: docker build -t startup2023/oeapi:${{ github.sha }} .

    # Push Docker Image
    - name: Push Docker Image
      run: docker push startup2023/oeapi:${{ github.sha }}

    # Deploy to DigitalOcean 
    - name: Deploy to DigitalOcean
      run: |
        # Generate an SSH key file from GitHub secrets
        echo "${{ secrets.DROPLET_SSH_KEY }}" > droplet_ssh_key
        chmod 600 droplet_ssh_key

        # SSH into the droplet and pull the latest Docker image, then restart the container
        ssh -o StrictHostKeyChecking=no -i droplet_ssh_key ${{ secrets.DROPLET_SSH_USERNAME }}@165.22.87.111 << 'ENDSSH'
          docker pull startup2023/oeapi:${{ github.sha }}
          cd /root/oeapi
          docker-compose down || true
          docker-compose up

          docker image prune -a -f
          #docker stop oeapi_container || true
          #docker rm oeapi_container || true
          #docker run --name oeapi_container -d -p 80:3000 startup2023/oeapi:${{ github.sha }}
        ENDSSH
